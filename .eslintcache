[{"C:\\Users\\ququ1\\react-project\\movie-app\\src\\index.js":"1","C:\\Users\\ququ1\\react-project\\movie-app\\src\\App.js":"2","C:\\Users\\ququ1\\react-project\\movie-app\\src\\reportWebVitals.js":"3","C:\\Users\\ququ1\\react-project\\movie-app\\src\\Search\\Search.js":"4","C:\\Users\\ququ1\\react-project\\movie-app\\src\\Movie\\Movie.js":"5","C:\\Users\\ququ1\\react-project\\movie-app\\src\\Movie\\MovieDetails.js":"6","C:\\Users\\ququ1\\react-project\\movie-app\\src\\Search\\SearchList.js":"7","C:\\Users\\ququ1\\react-project\\movie-app\\src\\context\\MovieContext.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":1074,"mtime":1608340921438,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":739,"mtime":1608340875231,"results":"13","hashOfConfig":"10"},{"size":976,"mtime":1608338424783,"results":"14","hashOfConfig":"10"},{"size":753,"mtime":1608338406622,"results":"15","hashOfConfig":"10"},{"size":785,"mtime":1608340895003,"results":"16","hashOfConfig":"10"},{"size":91,"mtime":1608340989618,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"qppa0t",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ququ1\\react-project\\movie-app\\src\\index.js",[],["39","40"],"C:\\Users\\ququ1\\react-project\\movie-app\\src\\App.js",[],"C:\\Users\\ququ1\\react-project\\movie-app\\src\\reportWebVitals.js",[],"C:\\Users\\ququ1\\react-project\\movie-app\\src\\Search\\Search.js",["41"],"  \r\nimport React, { useContext } from \"react\";\r\nimport SearchList from \"./SearchList\";\r\nimport { MoviesContext } from \"../context/MovieContext\";//for context\r\n\r\nconst Search = () => {\r\n  const fromCon = useContext(MoviesContext);//for context\r\n\r\n  const { searchValue, fetchMovieListAPI, movieResults } = fromCon;//for context\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        value={searchValue}\r\n        onChange={(e) => fetchMovieListAPI(e.target.value)}\r\n        type=\"text\"\r\n      />\r\n\r\n      {/* { searchValue !== \"\" ? <SearchList movieResults={movieResults} /> : \"\"} */}\r\n      {searchValue !== \"\" && (\r\n        <SearchList \r\n        // movieResults={movieResults}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;","C:\\Users\\ququ1\\react-project\\movie-app\\src\\Movie\\Movie.js",["42"],"import React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport MovieDetails from \"./MovieDetails\";\r\nconst Movie = () => {\r\n  const { search } = useLocation();\r\n  const [movieDetail, setMovieDetail] = useState(null);\r\n  const movie = queryString.parse(search);\r\n\r\n  const { movieTitle } = useParams();\r\n\r\n  console.log(movieTitle);\r\n\r\n  async function fetchMovieDetail() {\r\n    try {\r\n      const MOVIE_API_KEY = process.env.REACT_APP_MOVIE_OMDB_API;\r\n\r\n      const response = await fetch(\r\n        `http://omdbapi.com/?apikey=${MOVIE_API_KEY}&t=${movie.title}`\r\n      );\r\n\r\n      const data = await response.json();\r\n\r\n      data.imdb = movieTitle;\r\n\r\n      setMovieDetail(data);\r\n    } catch (e) {}\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMovieDetail();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <MovieDetails {...movieDetail} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n",["43","44"],"C:\\Users\\ququ1\\react-project\\movie-app\\src\\Movie\\MovieDetails.js",["45","46"],"C:\\Users\\ququ1\\react-project\\movie-app\\src\\Search\\SearchList.js",["47","48"],"  \r\nimport React, { useContext } from \"react\";\r\nimport { MoviesContext } from \"../context/MovieContext\";\r\nimport \"./Search.css\";\r\n\r\nconst SearchList = () => {\r\n  const fromCon = useContext(MoviesContext); //for context\r\n\r\n  const { searchValue, fetchMovieListAPI, movieResults } = fromCon; //for context\r\n\r\n  function showMovieList() {\r\n    return movieResults.map((item, i) => {\r\n      return (\r\n        <div className=\"search-list\" key={i}>\r\n          <div key={i} >\r\n            <img\r\n              src={item.Poster}\r\n              alt=\"some good movie\"\r\n              style={{ width: \"200px\" }}\r\n            />\r\n            {/* {console.log(i)} */}\r\n          </div>\r\n         </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  return <ul>{showMovieList()}</ul>;\r\n};\r\n\r\nexport default SearchList;","C:\\Users\\ququ1\\react-project\\movie-app\\src\\context\\MovieContext.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":9,"column":43,"nodeType":"55","messageId":"56","endLine":9,"endColumn":55},{"ruleId":"57","severity":1,"message":"58","line":32,"column":6,"nodeType":"59","endLine":32,"endColumn":8,"suggestions":"60"},{"ruleId":"49","replacedBy":"61"},{"ruleId":"51","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":16,"column":7,"nodeType":"65","endLine":16,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":28,"column":61,"nodeType":"68","endLine":28,"endColumn":76},{"ruleId":"53","severity":1,"message":"69","line":9,"column":11,"nodeType":"55","messageId":"56","endLine":9,"endColumn":22},{"ruleId":"53","severity":1,"message":"70","line":9,"column":24,"nodeType":"55","messageId":"56","endLine":9,"endColumn":41},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'movieResults' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovieDetail'. Either include it or remove the dependency array.","ArrayExpression",["73"],["71"],["72"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'searchValue' is assigned a value but never used.","'fetchMovieListAPI' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [fetchMovieDetail]",{"range":"76","text":"77"},[857,859],"[fetchMovieDetail]"]